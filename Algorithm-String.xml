<templateSet group="Algorithm-String">
  <template name="oystring-kmp" value="/* KMP算法&#10; * 子串和子数组:一定是连续&#10; * 子序列:可以连续,可以不连续&#10; * 基础概念:在一个字符串中,一个字符之前这个字符串的最长前缀和最长后缀的匹配长度,前缀不能包含最后一个字符,后缀不能包含第一个字符&#10; *&#10; * abcabc&#10; * a c&#10; * ab bc&#10; * abc abc  相等 3就是指一个字符之前这个字符串的最长前缀 和 最长后缀的匹配长度&#10; * abca cabc&#10; * abcab bcabc&#10; * abcabc abcabc 不能取&#10; *&#10; * 配不上的那个字符最长前缀 和 最长后缀的匹配长度&#10; *&#10; * abkababkabF&#10; * abkababkabX&#10; *&#10; * abkababkabF&#10; *      abkababkabX&#10; *&#10; * abkababkabF&#10; *         abkababkabX&#10; *&#10; */&#10;public class Solution {&#10;    public static int getIndexOf(String s, String m) {&#10;        if (s == null || m == null || m.length() &lt; 1 || s.length() &lt; m.length()) {&#10;            return -1;&#10;        }&#10;        char[] str1 = s.toCharArray();&#10;        char[] str2 = m.toCharArray();&#10;        int i1 = 0;&#10;        int i2 = 0;&#10;        //算出每个字符的最长匹配长度(0位置为-1,1位置为0)&#10;        int[] next = getNextArray(str2);&#10;        while (i1 &lt; str1.length &amp;&amp; i2 &lt; str2.length) {&#10;            if (str1[i1] == str2[i2]) {&#10;                i1++;&#10;                i2++;&#10;            } else if (next[i2] == -1) {&#10;                i1++;&#10;            } else {&#10;                i2 = next[i2];&#10;            }&#10;        }&#10;        return i2 == str2.length ? i1 - i2 : -1;&#10;    }&#10;&#10;    public static int[] getNextArray(char[] str) {&#10;        if (str.length == 1) {&#10;            return new int[] { -1 };&#10;        }&#10;        int[] next = new int[str.length];&#10;        next[0] = -1;&#10;        next[1] = 0;&#10;        int pos = 2;&#10;        int cn = 0;&#10;        while (pos &lt; next.length) {&#10;            if (str[pos - 1] == str[cn]) {&#10;                next[pos++] = ++cn;&#10;            } else if (cn &gt; 0) {&#10;                cn = next[cn];&#10;            } else {&#10;                next[pos++] = 0;&#10;            }&#10;        }&#10;        return next;&#10;    }&#10;&#10;    public static void main(String[] args) {&#10;        String str = &quot;abcabcababaccc&quot;;&#10;        String match = &quot;ababa&quot;;&#10;        System.out.println(getIndexOf(str, match));&#10;&#10;    }&#10;}" description="字符串 - KMP算法 - OYStringKMP" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
</templateSet>