<templateSet group="Java-Class">
  <template name="oykeyword" value="/*&#10; * default (即默认，什么也不写）: 在同一包内可见，不使用任何修饰符。使用对象：类、接口、变量、方法。&#10; * private : 在同一类内可见。使用对象：变量、方法。 注意：不能修饰类（外部类）&#10; * public : 对所有类可见。使用对象：类、接口、变量、方法&#10; * protected : 对同一包内的类和所有子类可见。使用对象：变量、方法。 注意：不能修饰类（外部类）。&#10; */&#10;&#10;/*&#10; *  static关键字的使用：&#10; *&#10; *  静态变量：static 关键字用来声明独立于对象的静态变量，无论一个类实例化多少对象，它的静态变量只有一份拷贝。 静态变量也被称为类变量。局部变量不能被声明为 static 变量。&#10; *  静态方法：static 关键字用来声明独立于对象的静态方法。静态方法不能使用类的非静态变量。静态方法从参数列表得到数据，然后计算这些数据。&#10; */&#10;&#10;/*&#10; *  final 修饰符:&#10; *&#10; *  final 表示&quot;最后的、最终的&quot;含义，变量一旦赋值后，不能被重新赋值。被 final 修饰的实例变量必须显式指定初始值。&#10; *  final 修饰符通常和 static 修饰符一起使用来创建类常量。&#10; *  父类中的 final 方法可以被子类继承，但是不能被子类重写。声明 final 方法的主要目的是防止该方法的内容被修改。&#10; * &#9;final 类不能被继承，没有类能够继承 final 类的任何特性。&#10; */&#10;&#10;/*&#10; *  abstract 修饰符&#10; *&#9;抽象类不能用来实例化对象，声明抽象类的唯一目的是为了将来对该类进行扩充。&#10; * &#9;一个类不能同时被 abstract 和 final 修饰。如果一个类包含抽象方法，那么该类一定要声明为抽象类，否则将出现编译错误。抽象类可以包含抽象方法和非抽象方法。&#10; *&#10; * &#9;抽象方法是一种没有任何实现的方法，该方法的的具体实现由子类提供。抽象方法不能被声明成 final 和 static。&#10; *  任何继承抽象类的子类必须实现父类的所有抽象方法，除非该子类也是抽象类。如果一个类包含若干个抽象方法，那么该类必须声明为抽象类。抽象类可以不包含抽象方法。&#10; */&#10;&#10;/*&#10; *&#9;interface关键字&#10; * &#9;接口不能用于实例化对象。接口没有构造方法。接口中所有的方法必须是抽象方法。接口不能包含成员变量，除了 static 和 final 变量。&#10; * &#9;接口不是被类继承了，而是要被类实现。接口支持多继承。&#10; * &#9;接口中每一个方法也是隐式抽象的,接口中的方法会被隐式的指定为 public abstract（只能是 public abstract，其他修饰符都会报错）。&#10; *  接口中可以含有变量，但是接口中的变量会被隐式的指定为 public static final 变量（并且只能是 public，用 private 修饰会报编译错误）&#10; * &#9;接口中的方法是不能在接口中实现的，只能由实现接口的类来实现接口中的方法。&#10; */&#10;&#10;/*&#10; *&#9;抽象类和接口的区别：&#10; *&#10; * &#9;抽象类中的方法可以有方法体，就是能实现方法的具体功能，但是接口中的方法不行。&#10; * &#9;抽象类中的成员变量可以是各种类型的，而接口中的成员变量只能是 public static final 类型的。&#10; * &#9;接口中不能含有静态代码块以及静态方法(用 static 修饰的方法)，而抽象类是可以有静态代码块和静态方法。&#10; * &#9;一个类只能继承一个抽象类，而一个类却可以实现多个接口。&#10; */&#10;&#10;/*&#10; *&#9;implements关键字&#10; *&#10; * &#9;当类实现接口的时候，类要实现接口中所有的方法。否则，类必须声明为抽象的类。&#10; * &#9;类在实现接口的方法时，不能抛出强制性异常，只能在接口中，或者继承接口的抽象类中抛出该强制性异常。&#10; * &#9;类在重写方法时要保持一致的方法名，并且应该保持相同或者相兼容的返回值类型。&#10; * &#9;如果实现接口的类是抽象类，那么就没必要实现该接口的方法。&#10; */&#10;" description="类 - 关键字的使用" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>